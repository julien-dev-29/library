@import url(normalize.css);
@import url(colors.css);

body {
  font-family: sans-serif;
  background-color: var(--gray-1);
  color: var(--gray-12);
}

.header {
  display: flex;
  justify-content: center;
  background-color: var(--violet-9);
  color: white;
}

.main {
  padding: 24px;
  max-width: 1080px;
  margin: auto;
}

.card {
  padding: 25px;
  border: 1px solid var(--gray-5);
  border-radius: 5px;
  background-color: var(--gray-3);
  color: var(--gray-12);
}

.card:hover {
  background-color: var(--gray-4);
}

.card:active {
  background-color: var(--gray-5);
}

#display {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 25px;
}
.btn-container {
  display: flex;
  justify-content: right;
  margin-bottom: 25px;
}

.btn {
  border-radius: 3px;
  padding: 8px 16px;
  border: none;
  background-color: var(--violet-9);
  color: white;
}

.btn:hover {
  cursor: pointer;
  background-color: var(--violet-10);
}

.btn:active {
  background-color: var(--violet-9);
}

/* Open state of the dialog  */
dialog:open {
  opacity: 1;
  transform: scaleY(1);
}

/* Closed state of the dialog   */
dialog {
  border: 1px solid var(--gray-9);
  border-radius: 5px;
  opacity: 0;
  background-color: var(--gray-1);
  color: var(--gray-12);
  transform: scaleY(0);
  transition: opacity 0.7s ease-out, transform 0.7s ease-out,
    overlay 0.7s ease-out allow-discrete, display 0.7s ease-out allow-discrete;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

/* Before open state  */
/* Needs to be after the previous dialog:open rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog:open {
    opacity: 0;
    transform: scaleY(0);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
  background-color: var(--gray-3);
  transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete,
    background-color 0.7s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

dialog:open::backdrop {
  background-color: var(--gray-3);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog:open::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}

.form {
  margin-top: 24px;
  display: grid;
  grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
}

.form label {
  color: var(--gray-11);
  margin-top: 8px;
  font-size: 14px;
}

.form input {
  padding: 8px 16px;
  border: none;
  border-radius: 3px;
  background-color: var(--gray-4);
  color: var(--gray-12);
}

.form input:focus {
  outline: 1px solid var(--violet-9);
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] {
  -moz-appearance: textfield;
}

#add-book-btn {
  margin-top: 16px;
}

.btn-error {
  border-radius: 3px;
  padding: 8px 16px;
  border: none;
  background-color: #e5484d;
  color: white;
}

.btn-error:hover {
  cursor: pointer;
  background-color: #ac4d39;
}

.btn-error:active {
  background-color: #e5484d;
}
